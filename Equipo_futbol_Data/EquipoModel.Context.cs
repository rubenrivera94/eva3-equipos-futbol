//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Equipo_futbol_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PCEEntities1 : DbContext
    {
        public PCEEntities1()
            : base("name=PCEEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<vw_Equipos> vw_Equipos { get; set; }
    
        public virtual int spEquipoDeleteById(Nullable<int> equipoId)
        {
            var equipoIdParameter = equipoId.HasValue ?
                new ObjectParameter("EquipoId", equipoId) :
                new ObjectParameter("EquipoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEquipoDeleteById", equipoIdParameter);
        }
    
        public virtual int spEquipoSave(string nombreEquipo, Nullable<int> cantidadJugadores, string nombreDt, string tipoEquipo, string capitanEquipo, Nullable<bool> tieneSub21)
        {
            var nombreEquipoParameter = nombreEquipo != null ?
                new ObjectParameter("NombreEquipo", nombreEquipo) :
                new ObjectParameter("NombreEquipo", typeof(string));
    
            var cantidadJugadoresParameter = cantidadJugadores.HasValue ?
                new ObjectParameter("CantidadJugadores", cantidadJugadores) :
                new ObjectParameter("CantidadJugadores", typeof(int));
    
            var nombreDtParameter = nombreDt != null ?
                new ObjectParameter("NombreDt", nombreDt) :
                new ObjectParameter("NombreDt", typeof(string));
    
            var tipoEquipoParameter = tipoEquipo != null ?
                new ObjectParameter("TipoEquipo", tipoEquipo) :
                new ObjectParameter("TipoEquipo", typeof(string));
    
            var capitanEquipoParameter = capitanEquipo != null ?
                new ObjectParameter("CapitanEquipo", capitanEquipo) :
                new ObjectParameter("CapitanEquipo", typeof(string));
    
            var tieneSub21Parameter = tieneSub21.HasValue ?
                new ObjectParameter("TieneSub21", tieneSub21) :
                new ObjectParameter("TieneSub21", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEquipoSave", nombreEquipoParameter, cantidadJugadoresParameter, nombreDtParameter, tipoEquipoParameter, capitanEquipoParameter, tieneSub21Parameter);
        }
    
        public virtual int spEquipoUpdateById(Nullable<int> equipoId, string nombreEquipo, Nullable<int> cantidadJugadores, string nombreDt, string tipoEquipo, string capitanEquipo, Nullable<bool> tieneSub21)
        {
            var equipoIdParameter = equipoId.HasValue ?
                new ObjectParameter("EquipoId", equipoId) :
                new ObjectParameter("EquipoId", typeof(int));
    
            var nombreEquipoParameter = nombreEquipo != null ?
                new ObjectParameter("NombreEquipo", nombreEquipo) :
                new ObjectParameter("NombreEquipo", typeof(string));
    
            var cantidadJugadoresParameter = cantidadJugadores.HasValue ?
                new ObjectParameter("CantidadJugadores", cantidadJugadores) :
                new ObjectParameter("CantidadJugadores", typeof(int));
    
            var nombreDtParameter = nombreDt != null ?
                new ObjectParameter("NombreDt", nombreDt) :
                new ObjectParameter("NombreDt", typeof(string));
    
            var tipoEquipoParameter = tipoEquipo != null ?
                new ObjectParameter("TipoEquipo", tipoEquipo) :
                new ObjectParameter("TipoEquipo", typeof(string));
    
            var capitanEquipoParameter = capitanEquipo != null ?
                new ObjectParameter("CapitanEquipo", capitanEquipo) :
                new ObjectParameter("CapitanEquipo", typeof(string));
    
            var tieneSub21Parameter = tieneSub21.HasValue ?
                new ObjectParameter("TieneSub21", tieneSub21) :
                new ObjectParameter("TieneSub21", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEquipoUpdateById", equipoIdParameter, nombreEquipoParameter, cantidadJugadoresParameter, nombreDtParameter, tipoEquipoParameter, capitanEquipoParameter, tieneSub21Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spObtenerCantidadEquiposFemeninos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spObtenerCantidadEquiposFemeninos");
        }
    
        public virtual ObjectResult<Nullable<int>> spObtenerCantidadEquiposMasculinos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spObtenerCantidadEquiposMasculinos");
        }
    }
}
